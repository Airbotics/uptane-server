# vs code extension to make http requests easily

@BASE_URL=http://localhost:8001
# @BASE_URL=https://api.airbotics.io
@API_VERSION=v0
@ORY_PROJECT_URL={{$dotenv %ORY_PROJECT_URL}}




# -----------------------------------------
# Auth
# -----------------------------------------

###
# @name loginStart
GET {{ORY_PROJECT_URL}}/self-service/login/api
Content-Type: application/json

@actionURL = {{loginStart.response.body.ui.action}}



###
# @name loginFinish
POST {{actionURL}}
Content-Type: application/json

{
    "identifier": "{{$dotenv %ORY_DEV_IDENTIFIER}}",
    "password": "{{$dotenv %ORY_DEV_PWD}}",
    "method": "password"
}

@SESSION_TOKEN = {{loginFinish.response.body.session_token}}




# -----------------------------------------
# Misc
# -----------------------------------------

### healthcheck
GET {{BASE_URL}}/ HTTP/1.1




# -----------------------------------------
# Account
# -----------------------------------------

### Update an account
PUT {{BASE_URL}}/api/{{API_VERSION}}/admin/account HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
Content-Type: application/json

{
    "first_name": "dev",
    "last_name": "tester"
}




# -----------------------------------------
# Team
# -----------------------------------------

### create a team
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/teams HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
Content-Type: application/json

{
    "name": "Acme Robotics"
}


### list teams
# @name teamResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/teams HTTP/1.1
x-session-token: {{SESSION_TOKEN}}

@TEAM_ID = {{teamResponse.response.body.$[0].id}}


### delete a team
DELETE {{BASE_URL}}/api/{{API_VERSION}}/admin/teams HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}


### list members in team
# @name teamResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/teams/members HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}






# -----------------------------------------
# Provisioning
# -----------------------------------------

### create provisioning credentials
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/provisioning-credentials HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json

{
    "name": "a test credential",
    "expires_at": 1992079455269
}
//sometime in 2033



### list provisioning credentials
# @name provsioningCredentialsResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/provisioning-credentials HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@CREDENTIALS_ID = {{provsioningCredentialsResponse.response.body.$[0].id}}


### download provisioning credentials
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/provisioning-credentials/{{CREDENTIALS_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}





# -----------------------------------------
# Robots
# -----------------------------------------

### create robot (this will always be called by aktualizr not an admin)
POST {{BASE_URL}}/api/{{API_VERSION}}/robot/devices HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-client-id: {{TEAM_ID}}
Content-Type: application/json

{
    "deviceId": "test bot",
    "ttl": 0 
}


### Register a robots ECUs (this will always be called by aktualizr not an admin)
POST {{BASE_URL}}/api/{{API_VERSION}}/robot/director/ecus HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-client-id: {{ROBOT_ID}}
Content-Type: application/json

{
    "primary_ecu_serial": "nvidia-jetson-AFHSDFJKAL",
    "ecus": [
        {
            "ecu_serial": "nvidia-jetson-AFHSDFJKAL",
            "hardware_identifier": "nvidia-jetson",
            "clientKey": {
                "keytype": "RSA",
                "keyval": {
                    "public": "-----BEGIN PUBLIC KEY-----12334-----END PUBLIC KEY-----"
                }
            }
        }
    ]
}


### list robots
# @name robotsResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/robots HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@ROBOT_ID = {{robotsResponse.response.body.$[0].id}}


### get a single robot
# @name robotResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/robots/{{ROBOT_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@ECU_ID = {{robotResponse.response.body.ecus.$[0].id}}


### delete a robot
DELETE {{BASE_URL}}/api/{{API_VERSION}}/admin/robots/{{ROBOT_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}


### get groups a robot is in
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/robots/{{ROBOT_ID}}/groups HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json


### get telemetry from all ecus on a robot
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/robots/{{ROBOT_ID}}/telemetry HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}


### get rollouts a robot is in
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/robots/{{ROBOT_ID}}/rollouts HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}




# -----------------------------------------
# Group
# -----------------------------------------

### list groups
# @name groupsResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/groups HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@GROUP_ID = {{groupsResponse.response.body.$[0].id}}


### create group
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/groups HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json

{
    "name": "test group",
    "description": "this is a test group", 
    "robot_ids": ["{{ROBOT_ID}}"]
}


### get group details
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json


### update group details
PATCH {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json

{
    "name": "updated name",
    "description": "updated description"
}


### delete group
DELETE {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}


### get robots in a group
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}}/robots HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json


### add a robot to a group
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}}/robots HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json

{
    "robot_id": "{{ROBOT_ID}}"
}


### delete a robot from a group
DELETE {{BASE_URL}}/api/{{API_VERSION}}/admin/groups/{{GROUP_ID}}/robots HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}
Content-Type: application/json

{
    "robot_id": "{{ROBOT_ID}}"
}




# -----------------------------------------
# Images
# -----------------------------------------

### list images
# @name imagesResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/images HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@IMAGE_ID = {{imagesResponse.response.body.$[0].id}}
@HW_ID = {{imagesResponse.response.body.$[0].hwids.$[0]}}


### get single image
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/images/{{IMAGE_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}




# -----------------------------------------
# Rollouts
# -----------------------------------------

### create a rollout
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/rollouts HTTP/1.1
Content-Type: application/json
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

{
    "name": "test rollout",
    "description": "this is a test rollout",
	"hwid_img_map": [
        { "hw_id": "{{HW_ID}}", "img_id": "{{IMAGE_ID}}" }
    ], 
	"targeted_robots": {
		"type": "group",
		"group_id": "{{GROUP_ID}}",
		"selected_bot_ids": []
	}
}


### list rollouts
# @name rolloutsResponse
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/rollouts HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

@ROLLOUT_ID = {{rolloutsResponse.response.body.$[0].id}}


### launch a rollout
POST {{BASE_URL}}/api/{{API_VERSION}}/admin/rollouts/{{ROLLOUT_ID}}/launch HTTP/1.1
Content-Type: application/json
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}

{}


### get a single rollout details
GET {{BASE_URL}}/api/{{API_VERSION}}/admin/rollouts/{{ROLLOUT_ID}} HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-team-id: {{TEAM_ID}}




# -----------------------------------------
# DIRECTOR REPO
# -----------------------------------------

### get initial version of root metadata 
GET {{BASE_URL}}/api/{{API_VERSION}}/robot/director/root.json HTTP/1.1
air-client-id:{{ROBOT_ID}}


### get latest targets metadata
GET {{BASE_URL}}/api/{{API_VERSION}}/robot/director/targets.json HTTP/1.1
air-client-id:{{ROBOT_ID}}




# -----------------------------------------
# IMAGE REPO
# -----------------------------------------

### get metadata
GET {{BASE_URL}}/api/{{API_VERSION}}/robot/repo/2.root.json HTTP/1.1
air-client-id:{{ROBOT_ID}}



### Upload a new targets.json (usually done by garage sign)
PUT {{BASE_URL}}/api/{{API_VERSION}}/robot/repo/{{TEAM_ID}}/api/v1/user_repo/targets HTTP/1.1
Content-Type: application/json

{
  "signed": {
    "_type": "Targets",
    "expires": "2024-01-31T22:28:17Z",
    "targets": {
      "jetson-primary-1.0.0": {
        "hashes": {
          "sha256": "908d8794ca5295eb87a180f5ad746154559cf736cbe4da2c84024db58cbc31c1",
          "sha512": "07cce32d67b098a1a49d949a129187ddede133aa15ef88d9202ede4b287775d0f8053459201e3abc24425014fae8083e134d8de2741f28f59ad0dd62cf699fd8"
        },
        "length": 1024,
        "custom": {
          "cliUploaded": false,
          "name": "jetson-primary",
          "version": "1.0.0",
          "hardwareIds": [
            "nvidia-jetson"
          ],
          "targetFormat": "OSTREE",
          "uri": "http://images.airbotics.io/908d8794ca5295eb87a180f5ad746154559cf736cbe4da2c84024db58cbc31c1",
          "createdAt": "2022-01-31T22:28:17Z",
          "updatedAt": "2022-01-31T22:28:17Z"
        }
      }
    },
    "version": 1
  },
  "signatures": [
    {
      "sig": "otBiJ9Xap2yDyz1IOwF7/jb3ja46vVl6vz/oIvQxLBg5XKFk1czyEb/L5g4RYYYhq/0jVf+UPWxR5gGEXLN5J24dBl+CDAyawZqTaGSn+pTt61zT2BVheV5ThfUhOcBQJBnABvW4BTvswzW0UHulRfD6lCwR2FQc/PbkcqVTSH+UBcDxBUYsS2KKVlJA5XbcvYvu+wEKSuo620APPJ86ztePZj1lgu07MpTQ3cVuRoYDzjWJmLmTXrZW4nd31It4rEpn3jd9WWda7kiAHZd2eGGwVjAGROwMm8ykHo0eQmYhQCok79Ro7Phtl10wDf258HgNrsAka2djH9oxZ2zelQ==",
      "keyid": "d9d51166f1146a45e3a3c8a02d50e9d4d035a50fb8e9bc426ab41787aa539a4e",
      "method": "rsassa-pss-sha256"
    }
  ]
}



# -----------------------------------------
# TREEHUB
# -----------------------------------------

### tmp generate deltas
POST {{BASE_URL}}/api/{{API_VERSION}}/robot/treehub/{{TEAM_ID}}/deltas?from=336fd3576177f3074188b444cb5c6f5147204a1f351d17b3ee87567c0ce333f9&to=35d4b1b202668be531aae6426de6cea7541ab308f2fc5b7a8f290985da36e750 HTTP/1.1


### download delta
GET {{BASE_URL}}/api/{{API_VERSION}}/robot/treehub/deltas/M2/_TV2F38wdBiLREy1xvUUcgSh81HRez7odWfAzjM_k-NdSxsgJmi+UxquZCbebOp1Qaswjy_Ft6jykJhdo251A/superblock
air-team-id: {{TEAM_ID}}


### get ostree config
GET {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/config HTTP/1.1


### upload a summary
PUT {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/summary HTTP/1.1
Content-Type: application/octet-stream

this is a sample summary



### download a summary
GET {{BASE_URL}}/api/{{API_VERSION}}/robot/treehub/{{TEAM_ID}}/summary HTTP/1.1



### upload a object
PUT {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/objects/25/1dce54d8562166b23d69dd697ee5c136691478f4ae02787c2723fb66126cfc.commit HTTP/1.1
Content-Type: application/octet-stream

this is a sample ostree object



### download a object
GET {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/objects/24/1dce54d8562166b23d69dd697ee5c136691478f4ae02787c2723fb66126cfc.commit HTTP/1.1



### upload a ref
PUT {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/refs/head/main HTTP/1.1
Content-Type: text/plain

251dce54d8562166b23d69dd697ee5c136691478f4ae02787c2723fb66126cfc



### get a ref
GET {{BASE_URL}}/api/{{API_VERSION}}/treehub/{{TEAM_ID}}/refs/head/main HTTP/1.1



###
GET {{BASE_URL}}/api/{{API_VERSION}}/api/v1/user_repo/targets.json HTTP/1.1



# -----------------------------------------
# Misc
# -----------------------------------------

### Simulate robot sending event
POST {{BASE_URL}}/api/{{API_VERSION}}/robot/events HTTP/1.1
x-session-token: {{SESSION_TOKEN}}
air-client-id: {{ROBOT_ID}}
Content-Type: application/json

[
  {
    "id": "9CBB02F4-F42F-4B05-BB24-25FF967EE30A",
    "deviceTime": "2022-01-31T22:28:17Z",
    "eventType": {
      "id": "EcuInstallationStarted",
      "version": 1
    },
    "event": {
      "correlationId": "",
      "ecu": "{{ECU_ID}}",
      "success": true
    }
  } 
]



